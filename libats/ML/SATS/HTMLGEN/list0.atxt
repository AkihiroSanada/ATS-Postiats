#decltitle("\
ATSLIB/libats/ML/list0\
")

(* ****** ****** *)

#declpreamble("\

The functions declared in this package are primarily for supporting
ML-style processing of list-values. The programmer is encouraged to use the
dependent datatype #stacode("list") instead of #stacode("list0") after
gaining familiarity with dependent types.

")

(* ****** ****** *)

#declnamesynop("list0_of_list")
#decldescript("\
This function casts a list-value of indexed type to a list-value of
unindexed type.
")
#declnamesynop("list0_of_list_vt")
#decldescript("\
This function casts a linear list-value of indexed type to a list-value of
unindexed type.
")
#declnamesynop("list_of_list0")
#decldescript("\
This function casts a list-value of unindexed type to a list-value of
indexed type.
")

(* ****** ****** *)

#declnamesynop("list0_head_exn")
#decldescript("\
This function returns the head of a given list if the list
is non-empty or raises a #dyncode("ListSubscriptExn") if
the list is empty.
")
#declnamesynop("list0_head_opt")
#decldescript("\
This function is the optional version of #dyncode("list0_head_exn").
")

(* ****** ****** *)

#declnamesynop("list0_tail_exn")
#decldescript("\
This function returns the tail of a given list if the list
is non-empty or raises an exception (ListSubscriptExn) if
the list is empty.
")
#declnamesynop("list0_tail_opt")
#decldescript("\
This function is the optional version of #dyncode("list0_tail_exn").
")

(* ****** ****** *)

#declnamesynop("list0_nth_exn")
#decldescript("\

This function returns element i of a given list if i is a natural
number less than the length of the list.  Otherwise, it raises an
exception (ListSubscriptExn).

")
#declnamesynop("list0_nth_opt")
#decldescript("\
This function is the optional version of #dyncode("list0_nth_exn").
")

(* ****** ****** *)

(* end of [list0.atxt] *)
