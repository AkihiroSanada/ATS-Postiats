(* ****** ****** *)

%{
implement srcfilename_get () = "../gmatrix.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/libats_gmatrix")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/libats/gmatrix\
")

(* ****** ****** *)

#declpreamble("\

This package contains various functions for manipulating generic matrices,
that is, two-dimensional arrays.

")

(* ****** ****** *)

#declnamesynop("mord")
#declnamesynop("MORD")

(* ****** ****** *)

#declnamesynop("gmatrix")
#declnamesynop("gmatrix_t0ype")
#declnamesynop("gmatrix_v")
#declnamesynop("GMX")

(* ****** ****** *)

#declnamesynop("gmatcol")
#declnamesynop("gmatcol_v")
#declnamesynop("GMC")

(* ****** ****** *)

#declnamesynop("lemma_gmatcol_param")
#declnamesynop("lemma_gmatcol_v_param")

(* ****** ****** *)

#declnamesynop("gmatcol_v_nil")
#declnamesynop("gmatcol_v_unnil")
#declnamesynop("gmatcol_v_unnil_nil")
#declnamesynop("gmatcol_v_cons")
#declnamesynop("gmatcol_v_uncons")

(* ****** ****** *)

#declnamesynop("gmatrow")
#declnamesynop("gmatrow_v")
#declnamesynop("GMR")

(* ****** ****** *)

#declnamesynop("lemma_gmatrow_param")
#declnamesynop("lemma_gmatrow_v_param")

(* ****** ****** *)

#declnamesynop("gmatrow_v_nil")
#declnamesynop("gmatrow_v_unnil")
#declnamesynop("gmatrow_v_unnil_nil")
#declnamesynop("gmatrow_v_cons")
#declnamesynop("gmatrow_v_uncons")

(* ****** ****** *)

#declnamesynop("multo_gvector_gmatcol_gvector")
#declnamesynop("multo_gmatrow_gvector_gvector")

(* ****** ****** *)

#declnamesynop("multo_gmatcol_gmatcol_gmatcol")
#declnamesynop("multo_gmatrow_gmatrow_gmatrow")

(* ****** ****** *)

#declnamesynop("tmulto_gvector_gvector_gmatcol")
#declnamesynop("tmulto_gvector_gvector_gmatrow")

(* ****** ****** *)

(* end of [gmatrix.atxt] *)
