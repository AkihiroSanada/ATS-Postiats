(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/libats_ilist_prf")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/libats/ilist_prf\
")

(* ****** ****** *)

#declpreamble("\

This package contains some common proof functions involving integer sequences.

")

(* ****** ****** *)

#declnamesynop("ilist")

(* ****** ****** *)

#declnamesynop("LENGTH")

#declnamesynop("length_istot")
#declnamesynop("length_isfun")
#declnamesynop("length_isnat")

(* ****** ****** *)

#declnamesynop("SNOC")

#declnamesynop("snoc_istot")
#declnamesynop("snoc_isfun")

#declnamesynop("lemma_snoc_length")

(* ****** ****** *)

#declnamesynop("APPEND")

#declnamesynop("append_istot")
#declnamesynop("append_isfun")

#declnamesynop("append_unit1")
#declnamesynop("append_unit2")

#declnamesynop("lemma_append_length")
#declnamesynop("lemma_append_snoc")

(* ****** ****** *)

#declnamesynop("NTH")
#declnamesynop("RNTH")
#declnamesynop("lemma_rnth_nth")
#declnamesynop("lemma_nth_rnth")

(* ****** ****** *)

#declnamesynop("INSERT")
#declnamesynop("lemma_insert_length")
#declnamesynop("lemma_nth_insert")

(* ****** ****** *)

(* end of [ilist_prf.atxt] *)
