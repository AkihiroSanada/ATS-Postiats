%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"list_vt_quicksort.dats"
val () = theAtextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_LGPL()

#atscode_separator()

(*
** Source:
** $PATSHOME/prelude/DATS/CODEGEN/list_vt_quicksort.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("Feburary, 2012")

#atscode_separator()

staload UN = "prelude/SATS/unsafe.sats"

#atscode_separator()

implement{a}
list_vt_quicksort$cmp (x1, x2) = gcompare_ref<a> (x1, x2)

(*
** HX-2012-05:
** copy a list into an array, perform quicksort on the
** array and then copy it back into the list
*)
implement{a}
list_vt_quicksort
  {n} (xs) = let
//
abst@ype a2 = a?
//
implement
array_quicksort$cmp<a2>
  (x1, x2) = let
  extern praxi __to {l:addr} (pf: !a2 @ l >> a @ l): void
  extern praxi __fr {l:addr} (pf: !a @ l >> a2 @ l): void
  prval () = __to (view@(x1))
  prval () = __to (view@(x2))
  val ans = list_vt_quicksort$cmp<a> (x1, x2)
  prval () = __fr (view@(x1))
  prval () = __fr (view@(x2))
in
  ans
end // end of [array_quicksort$cmp]
//
prval () = lemma_list_vt_param (xs)
//
val n = list_vt_length (xs)
//
val (
  pf, pfgc | p
) = array_ptr_alloc<a2> ((i2sz)n)
val () = let
  val xs1 = $UN.castvwtp1 {list(a2,n)} (xs)
in
  array_copy_from_list (!p, xs1)
end // end of [val]
//
val () = array_quicksort<a2> (!p, (i2sz)n)
//
val () = let
  fun loop
    {l:addr}{n:nat} .<n>. (
    pf: !array_v (a2, l, n) | xs: !list_vt (a, n), p: ptr l
  ) :<!wrt> void =
    case+ xs of
    | @list_vt_cons (x, xs1) => let
        prval (
          pf1, pf2
        ) = array_v_uncons (pf)
        val p_x = $UN.cast2Ptr1 (addr@(x))
        val () = $UN.ptr1_set<a2> (p_x, !p)
        val () = loop (pf2 | xs1, ptr1_succ<a2> (p))
        prval () = pf := array_v_cons (pf1, pf2)
        prval () = fold@ (xs)
      in
        // nothing
      end // end of [list_vt]
    | list_vt_nil () => ()
  // end of [loop]
in
  loop (pf | xs, p)
end // end of [val]
//
val () = array_ptr_free {a2} (pf, pfgc | p)
//
in
  xs
end // end of [list_vt_quicksort]

implement{a}
list_vt_quicksort_fun
  (xs, cmp) = let
//
implement
list_vt_quicksort$cmp<a> (x1, x2) = cmp (x1, x2)
//
in
  list_vt_quicksort (xs)
end // end of [list_vt_quicksort_fun]

#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "list_vt_quicksort_atxt.txt")
%}\
