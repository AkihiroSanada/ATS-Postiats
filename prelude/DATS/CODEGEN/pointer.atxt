%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"pointer.dats"
val () = theAtextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_LGPL()

#atscode_separator()

(*
** Source:
** $PATSHOME/prelude/DATS/CODEGEN/pointer.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("March, 2012")

#atscode_separator()

staload UN = "prelude/SATS/unsafe.sats"

#atscode_separator()

primplmnt
ptr_get_index {l} (p) = addreq_make {l, l} ()

#atscode_separator()

implement{a}{tk}
ptr0_add_gint (p, i) =
  $UN.cast2ptr (
  $UN.cast2lint (p) + $UN.cast2lint(i) * $UN.cast2lint(sizeof<a>)
) // end of [ptr0_add_gint]

implement{a}{tk}
ptr0_add_guint (p, i) =
  $UN.cast2ptr (
  $UN.cast2ulint(p) + $UN.cast2ulint(i) * $UN.cast2ulint(sizeof<a>)
) // end of [ptr0_add_guint]

#atscode_separator()

implement{a} ptr_get (pf | p) = !p
implement{a} ptr_get_vt (pf | p) = !p

implement{a} ptr_set (pf | p, x) = !p := x

implement{a}
ptr_exch (pf | p, x) = {
  val tmp = x; val () = x := !p; val () = !p := tmp
} // end of [ptr_exch]

#atscode_separator()

implement
fprint_val<ptr> (out, p) = fprint_ptr (out, p)

#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "pointer_atxt.txt")
%}\
