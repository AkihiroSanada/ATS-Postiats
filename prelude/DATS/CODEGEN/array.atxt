%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"array.dats"
val () = theTextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_LGPL()

#atscode_separator()

(*
** Source:
** $PATSHOME/prelude/DATS/CODEGEN/array.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("Feburary, 2012")

#atscode_separator()

implement{a}
array_foreach_funenv
  (pfv | A, f, env, asz) =
  array_foreach_funenv_tsz (pfv | A, f, env, asz, sizeof<a>)
// end of [array_foreach_funenv]

#atscode_separator()

implement{a}
array_bsearch_funenv
  (A, n, pord, env) = let
  val itr =
    iter_make_array (view@(A) | addr@(A), n)
  val () = iter_bsearch_funenv (itr, pord, env, n)
  val ofs = iter_get_offset (itr)
  val (pf | ()) = iter_free_array (itr)
  prval () = view@ (A) := pf
in
  ofs
end // end of [array_bsearch_funenv]

#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "array_atxt.txt")
%}\
