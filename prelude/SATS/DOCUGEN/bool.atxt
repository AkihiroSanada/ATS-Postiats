(* ****** ****** *)

%{
implement srcfilename_get () = "../bool.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/prelude_bool")
%}

(* ****** ****** *)

#decltitle("\
ATSLIB/prelude/bool\
")

(* ****** ****** *)

#declpreamble('\

#para('\
This package contains various functions on booleans values.
')

')#comment("declpreamble")

(* ****** ****** *)

#declnamesynop("int2bool0")
#decldescrpt('\
This function maps any nonzero integer to #dyncode("true") and zero
to #dyncode("false").
')
#declnamesynop("int2bool1")
#decldescrpt('\
This function does the same as #dyncode("int2bool0") at run-time.
')

(* ****** ****** *)

#declnamesynop("bool2int0")
#decldescrpt('\
This function maps #dyncode("true") and #dyncode("false") to 1 and 0, respectively.
')
#declnamesynop("bool2int1")
#decldescrpt('\
This function does the same as #dyncode("bool2int0") at run-time.
')

(* ****** ****** *)

#declnamesynop("add_bool0_bool0")
#declnamesynop("mul_bool0_bool0")

(* ****** ****** *)
//
// HX: various overloaded symbols
//
(* ****** ****** *)

#declnamesynop("+")
#declnamesynop("*")

(* ****** ****** *)

#declnamesynop("print")
#declnamesynop("prerr")
#declnamesynop("fprint")

(* ****** ****** *)

(* end of [bool.atxt] *)
