#decltitle("\
ATSLIB/prelude/option\
")

(* ****** ****** *)

#declpreamble('\

#para('\
This package contains some common functions for processing (functional)
option-values.
')

')#comment("declpreamble")

(* ****** ****** *)

#declnamesynop("option")

(* ****** ****** *)

#declnamesynop("NotSomeExn")

(* ****** ****** *)

#declnamesynop("option_some")
#decldescrpt('\
This is just the function version of the constructor #dyncode("Some").
')
#declnamesynop("option_none")
#decldescrpt('\
This is just the function version of the constructor #dyncode("None").
')

(* ****** ****** *)

#declnamesynop("option_is_some")
#decldescrpt('\
This funtion returns true if and only a given option-value is formed with
the constructor #dyncode('Some').
')
#declnamesynop("option_is_none")
#decldescrpt('\
This funtion returns true if and only a given option-value is formed with
the constructor #dyncode('None').
')

(* ****** ****** *)

#declnamesynop("option_unsome")
#decldescrpt('\
This is just the inverse of #dyncode("option_some").
')

#declnamesynop("option_unsome_exn")
#decldescrpt('\

If a given option-value is of the form #dyncode("Some(v)"), then the
function returns v. Otherwise, it raises an exception
(#dyncode("NotSomeExn")).  ')

(* ****** ****** *)

(* end of [option.atxt] *)
