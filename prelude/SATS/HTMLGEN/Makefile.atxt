%{
//
staload
STDIO = "libc/SATS/stdio.sats"
staload TIME = "libc/SATS/time.sats"
//
dynload "libatsdoc/dynloadall.dats"
//
staload "libatsdoc/SATS/libatsdoc_atext.sats"
//
%}\
%{

fun comment
  (x: string): atext = atext_nil ()
// end of [comment]

fun make_entry
  (nm: string): atext = let
//
val ent = sprintf ("\
all:: %s.html\n\
%s.html: \
  %s_atxt.exe ; $(CAT) ../%s.sats | ./$< > $@
%s_atxt.txt: %s.atxt ; \
  $(CAT) $< | $(ATSDOC) --prefix __dtok --outcode htmlgendecl_data_atxt.dats > $@
%s_atxt.exe: \
  htmlgendecl_atxt.dats %s_atxt.txt $(HTMLGENDECL) ; \
  $(ATSCC) $(INCLUDE) $(INCLATS) -D_ATS_GCATS -o $@ $< \
    $(HTMLGENDECL) $(PATSHOME)/libatsyntax/libatsyntax.a -latsdoc
clean:: ; $(RMF) %s_atxt.exe
cleanall:: ; $(RMF) %s.html
", @(nm, nm, nm, nm, nm, nm, nm, nm, nm, nm)
) // end of [val]
//
val ent = string_of_strptr (ent)
//
in
  atext_strcst (ent)
end // end of [make_entry]

%}\
#
#
# This Makefile is automatically generated
# from executing the following command-line:
#
# make -f Makefile.gen
#
#

######

ATSHOMEQ="$(ATSHOME)"
ATSCC=$(ATSHOMEQ)/bin/atscc
ATSOPT=$(ATSHOMEQ)/bin/atsopt
ATSDOC=$(ATSHOMEQ)/bin/atsdoc

######

PATSHOMEQ="$(PATSHOME)"
INCLUDE=-I $(PATSHOMEQ)/src
INCLATS=-IATS $(PATSHOMEQ) -IATS $(PATSHOMEQ)/src

######

CAT=cat

######

all::

######

HTMLGENDECL= \\
  htmlgendecl_sats.o \\
  htmlgendecl_dats.o \\

htmlgendecl_sats.o: \\
  htmlgendecl.sats ; $(ATSCC) $(INCLUDE) $(INCLATS) -c $(ATSCCFLAGS) $<
htmlgendecl_dats.o: \\
  htmlgendecl.dats ; $(ATSCC) $(INCLUDE) $(INCLATS) -c $(ATSCCFLAGS) $<

######

htmlgendecl_atxt.dats: htmlgendecl.atxt ; \
  $(ATSDOC) --outcode $@ -i $< > htmlgendecl_atxt.txt

######

#make_entry("bool")
#make_entry("char")
#make_entry("filebas")
#make_entry("float")
#make_entry("integer")
#make_entry("pointer")
#make_entry("reference")
#make_entry("string")

#make_entry("arith_prf")

#make_entry("array")
#make_entry("array_prf")
#make_entry("arrayptr")
#make_entry("arrayref")

#make_entry("list")
#make_entry("list_vt")

#make_entry("option")
#make_entry("option_vt")

#make_entry("unsafe")

######

RMF=rm -f

######

clean:: ; $(RMF) *~
clean:: ; $(RMF) *_?ats.o *_?ats.c
clean:: ; $(RMF) *_atxt.txt
clean:: ; $(RMF) *_atxt.dats

cleanall:: clean

###### end of [Makefile] ######
\
%{
implement main () = fprint_filsub (stdout_ref, "Makefile_atxt.txt")
%}\
