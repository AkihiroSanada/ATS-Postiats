%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"filebas.sats"
val () = theTextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_LGPL()

#atscode_separator()

(*
** Source:
** $PATSHOME/prelude/SATS/CODEGEN/filebas.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("February, 2012")

#atscode_separator()

#atscode_decl_strcst('\
val stdin_ref : FILEref
val stdout_ref : FILEref
val stderr_ref : FILEref
')\

#atscode_separator()

#atscode_decl_strcst('\
val file_mode_r : file_mode (r()) // = "r"
val file_mode_rr : file_mode (rw()) // = "r+"
val file_mode_w : file_mode (w()) // = "w"
val file_mode_ww : file_mode (rw()) // = "w+"
val file_mode_a : file_mode (rw()) // = "a"
val file_mode_aa : file_mode (rw()) // = "a+"
')\

#atscode_separator()

fun fileref_open_exn
  (path: string, fm: file_mode):<!exn> FILEref
// end of [fileref_open_exn]

fun fileref_open_opt
  (path: string, fm: file_mode):<!exn> Option_vt (FILEref)
// end of [fileref_open_opt]

#atscode_separator()

fun fileref_close (r: FILEref): void

#atscode_separator()

typedef
fileref_load_type (a:t@ype) =
  (FILEref, &a? >> opt (a, b)) -<fun> #[b:bool] bool (b)
// end of [fileref_load_type]

fun{a:t@ype}
fileref_load : fileref_load_type (a)

fun fileref_load_int : fileref_load_type (int)
fun fileref_load_char : fileref_load_type (char)
fun fileref_load_float : fileref_load_type (float)
fun fileref_load_double : fileref_load_type (double)
fun fileref_load_string : fileref_load_type (string)

#atscode_separator()

fun{a:t@ype}
fileref_get_opt (r: FILEref):<> Option_vt (a)

fun{
a:t@ype
} fileref_get_exnmsg
  (r: FILEref, msg: NSHARED(string)):<!exn> a
// end of [fileref_get_exnmsg]

(*
macdef
fileref_get_exnloc
  (r) = fileref_get_exnmsg (r, \#LOCATION)
// end of [fileref_get_exnloc]
*)

#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "filebas_atxt.txt")
%}\
