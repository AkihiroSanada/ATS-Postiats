%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"filebas.sats"
val () = theTextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_LGPL()

#atscode_separator()

(*
** Source:
** $PATSHOME/prelude/SATS/CODEGEN/filebas.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("February, 2012")

#atscode_separator()

#atscode_decl_strcst('\
val stdin_ref : FILEref
val stdout_ref : FILEref
val stderr_ref : FILEref
')\

#atscode_separator()

#atscode_decl_strcst('\
val file_mode_r : file_mode (r()) // = "r"
val file_mode_rr : file_mode (rw()) // = "r+"
val file_mode_w : file_mode (w()) // = "w"
val file_mode_ww : file_mode (rw()) // = "w+"
')\

#atscode_decl_strcst('\
castfn file_mode (x: string):<> file_mode
')\

#atscode_separator()

#atscode_decl_strcst('\
fun open_fileref_exn
  (path: string, fm: file_mode):<!exn> FILEref
// end of [open_fileref_exn]
')\

#atscode_decl_strcst('\
fun open_fileref_opt
  (path: string, fm: file_mode):<!exn> Option_vt (FILEref)
// end of [open_fileref_opt]
')\

#atscode_separator()

#atscode_decl_strcst('\
fun close_fileref (r: FILEref): void
')\

#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "filebas_atxt.txt")
%}\
