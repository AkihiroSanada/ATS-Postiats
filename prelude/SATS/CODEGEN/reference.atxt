%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT=="txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"reference.sats"
val () = theTextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_LGPL()

#atscode_separator()

(*
** Source:
** $PATSHOME/prelude/SATS/CODEGEN/reference.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("March, 2012")

#atscode_separator()

#atscode_decl_strcst('\
sortdef t0p = t@ype and vt0p = viewt@ype
')\

#atscode_separator()

#atscode_decl_strcst('\
castfn ref_get_ptr
  {a:viewt@ype} (r: ref a):<> [l:agz] ptr (l)
castfn ref_get_view_ptr
  {a:viewt@ype} (r: ref a):<> [l:agz] (vbox (a @ l) | ptr l)
// end of [ref_get_view_ptr]
')\

#atscode_separator()

(*
macdef ptr_of_ref = ref_get_ptr
*)

#atscode_separator()

#atscode_decl_strcst('\
fun{a:vt0p} ref (x: a):<> ref a
fun{a:vt0p} ref_make_elt (x: a):<> ref a
')\

#atscode_separator()

#atscode_decl_strcst('\
fun{a:t0p} ref_get_elt (r: ref a):<!ref> a
fun{a:t0p} ref_set_elt (r: ref a, x: a):<!ref> void
')\

#atscode_decl_strcst('\
fun{a:vt0p} ref_exch_elt (r: ref a, x: &a):<!ref> void
')\

#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "reference_atxt.txt")
%}\
