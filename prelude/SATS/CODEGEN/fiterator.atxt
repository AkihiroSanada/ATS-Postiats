%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"fiterator.sats"
val () = theTextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_LGPL()

#atscode_separator()

(*
** Source:
** $PATSHOME/prelude/SATS/CODEGEN/fiterator.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("February, 2012")

#atscode_separator()

absviewt@ype
fiterator (
  xs: t@ype, x: t@ype+, f: int, r: int
) // end of [absviewt@ype]

prfun lemma_iterator_params
  {xs:t@ype}{x:t@ype}{f,r:int}
  (iter: !fiterator (xs, x, f, r)): [f>=0;r>=0] void
// end of [lemma_iterator_params]

#atscode_separator()

fun{
xs:t@ype}{x:t@ype
} iter_make (xs: xs):<> [r:nat] fiterator (xs, x, 0, r)

fun{
xs:t@ype}{x:t@ype
} iter_free {f,r:int} (iter: fiterator (xs, x, f, r)):<> void

#atscode_separator()

fun{
xs:t@ype}{x:t@ype
} iter_is_atend {f,r:int}
  (iter: &fiterator (xs, x, f, r)):<> bool (r==0)
// end of [iter_is_atend]

fun{
xs:t@ype}{x:t@ype
} iter_isnot_atend {f,r:int}
  (iter: &fiterator (xs, x, f, r)):<> bool (r > 0)
// end of [iter_isnot_atend]

#atscode_separator()

fun{
xs:t@ype}{x:t@ype
} iter_get_at
  {f,r:int | r > 0} (iter: &fiterator (xs, x, f, r)):<> x
// end of [iter_get_at]

fun{
xs:t@ype}{x:t@ype
} iter_getinc_at
  {f,r:int | r > 0} (
  iter: &fiterator (xs, x, f, r) >> fiterator (xs, x, f+1, r-1)
) :<> x // end of [iter_getinc_at]

fun{
xs:t@ype}{x:t@ype
} iter_getdec_at
  {f,r:int | f > 0; r > 0} (
  iter: &fiterator (xs, x, f, r) >> fiterator (xs, x, f-1, r+1)
) :<> x // end of [iter_getdec_at]

#atscode_separator()

fun{
xs:t@ype}{x:t@ype
} iter_inc {f,r:int | r > 0} (
  iter: &fiterator (xs, x, f, r) >> fiterator (xs, x, f+1, r-1)
) :<> void // end of [iter_inc]

fun{
xs:t@ype}{x:t@ype
} iter_dec {f,r:int | f > 0} (
  iter: &fiterator (xs, x, f, r) >> fiterator (xs, x, f-1, r+1)
) :<> void // end of [iter_dec]

#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "fiterator_atxt.txt")
%}\
