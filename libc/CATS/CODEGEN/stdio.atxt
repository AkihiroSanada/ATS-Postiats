%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"stdio.cats"
val () = theAtextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner_for_C()
#atscode_copyright_LGPL_for_C()

#atscode_separator_for_C()

/*
** Source:
** $PATSHOME/libc/CATS/CODEGEN/stdio.atxt
** Time of generation: #timestamp()
*/

#atscode_separator_for_C()

/*
#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("September, 2011")
*/

#atscode_separator_for_C()

\#ifndef ATSLIB_LIBC_STDIO_CATS
\#define ATSLIB_LIBC_STDIO_CATS

#atscode_separator_for_C()

\#include <stdio.h>
/*
extern
void perror (const char* str) ; // in [stdio.h]
*/
extern void exit (int status) ; // in [stdlib.h]

#atscode_separator_for_C()

\#define ATSLIBfailexit(cmd) \\
  do { \\
    perror(cmd) ; \\
    fprintf(stderr, "exit(ATSLIB): [%s] failed\n", cmd) ; exit(1) ; \\
  } while (0) \\

#atscode_separator_for_C()

\#define atslib_clearerr clearerr

#atscode_separator_for_C()

\#define atslib_fopen fopen

#atscode_separator_for_C()

\#define atslib_fclose fclose
\#define atslib_fclose0 atslib_fclose
\#define atslib_fclose1 atslib_fclose

ATSinline()
atsvoid_t0ype
atslib_fclose_exn(
  atstype_ptr filp
) {
  int err = fclose((FILE*)filp) ;
  if (err < 0) {
    perror ("fclose") ;
    fprintf (stderr, "exit(ATS): [fclose] failed\n") ; exit(1) ;
  } // end of [if]
  return ; // [fclose] succed
} // end of [atslib_fclose_exn]
\#define atslib_fclose0_exn atslib_fclose_exn
\#define atslib_fclose1_exn atslib_fclose_exn

/*
\#define atslib_fclose_stdin() atslib_fclose_exn(stdin)
\#define atslib_fclose_stdout() atslib_fclose_exn(stdout)
\#define atslib_fclose_stderr() atslib_fclose_exn(stderr)
*/

#atscode_separator_for_C()

\#define atslib_fileno0 fileno
\#define atslib_fileno1 fileno

#atscode_separator_for_C()

\#define atslib_feof0 feof
\#define atslib_feof1 feof

#atscode_separator_for_C()

\#define atslib_ferror0 ferror
\#define atslib_ferror1 ferror

#atscode_separator_for_C()

\#define atslib_fgetc0 fgetc
\#define atslib_fgetc1 fgetc

#atscode_separator_for_C()

\#define atslib_fputc0_int fputc
\#define atslib_fputc0_char(c, fp) fputc((int)c, fp)
\#define atslib_fputc1_int fputc
\#define atslib_fputc1_char(c, fp) fputc((int)c, fp)

#atscode_separator_for_C()

\#define atslib_fputs0 fputs
\#define atslib_fputs1 fputs

#atscode_separator_for_C()

\#define atslib_fseek0 fseek
\#define atslib_fseek1 fseek

#atscode_separator_for_C()

\#define atslib_ftell0 ftell
\#define atslib_ftell1 ftell

#atscode_separator_for_C()

\#define atslib_rewind0 rewind
\#define atslib_rewind1 rewind

#atscode_separator_for_C()

\#define atslib_tmpfile tmpfile

ATSinline()
atstype_ptr
atslib_tmpfile_exn(
) {
  FILE* filp = tmpfile() ;
  if (!filp) {
    perror ("tmpfile") ;
    fprintf (stderr, "exit(ATS): [tmpfile] failed\n") ; exit(1) ;
  } // end of [if]
  return (filp) ; // [tmpfile] succed
} // end of [atslib_tmpfile_exn]
\#define atslib_tmpfile_ref_exn atslib_tmpfile_exn

#atscode_separator_for_C()

\#endif // ifndef ATSLIB_LIBC_STDIO_CATS

#atscode_separator_for_C()

#atscode_eof_strsub_for_C("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "stdio_atxt.txt")
%}\
