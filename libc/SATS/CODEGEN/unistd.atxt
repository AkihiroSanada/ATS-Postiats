%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"unistd.sats"
val () = theAtextMap_insert_str ("thisfilename", _thisfilename)
%}\
\
#atscode_banner()
#atscode_copyright_LGPL()

#atscode_separator()

(*
** Source:
** $PATSHOME/libats/SATS/CODEGEN/unistd.atxt
** Time of generation: #timestamp()
*)

#atscode_separator()

#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("April, 2012")

#atscode_separator()

\#define ATS_PACKNAME "ATSLIB.libc"
\#define ATS_STALOADFLAG 0 // no need for staloading at run-time

#atscode_separator()

\#define SHR(x) x // SHARED // HX: for commenting
\#define NSH(x) x // NSHARED // HX: for commenting

#atscode_separator()

fun execv {n:pos}{l:addr} (
  pf: !parray_v (string, l, n) | path: NSH(string), argv: ptr l
) : intLt(0) = "mac\#atslib_execv"
fun execv_unsafe // HX: for failure, ~1 is returned
  (path: NSH(string), argv: ptr): intLt(0) = "mac\#atslib_execv"

fun execvp {n:pos}{l:addr} (
  pf: !parray_v (string, l, n) | fname: NSH(string), argv: ptr l
) : intLt(0) = "mac\#atslib_execvp"
fun execvp_unsafe // HX: for failure, ~1 is returned
  (fname: NSH(string), argv: ptr): intLt(0) = "mac\#atslib_execvp"

#atscode_separator()
/*
int execve(const char *filename, char *const argv[], char *const envp[]);
*/
fun execve
  {n1,n2:pos}{l1,l2:addr} (
  pf1: !parray_v (string, l1, n1)
, pf2: !parray_v (string, l2, n2)
| fname: NSH(string), argv: ptr l1, envp: ptr l2
) : intLt(0) = "mac\#atslib_execve"
fun execve_unsafe // HX: for failure, ~1 is returned
  (fname: NSH(string), argv: ptr, envp: ptr): intLt(0) = "mac\#atslib_execve"
// end of [execve_unsafe]

#atscode_separator()

/*
void encrypt(char block[64], int edflag);
*/
fun encrypt (
  block: &(@[char][64]), edflag: int
) :<!ref> void = "mac\#atslib_encrypt"

#atscode_separator()

#atscode_eof_strsub("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "unistd_atxt.txt")
%}\
