%{
#define ATSCODEFORMAT "txt"
#if (ATSCODEFORMAT == "txt")
#include "utils/atsdoc/HATS/postiatsatxt.hats"
#endif // end of [ATSCCODEFORMAT]
val _thisfilename = atext_strcst"mysql.cats"
val () = theAtextMap_insert_str ("thisfilename", _thisfilename)
fun atsctrb_define (fname: string): atext = (
  atext_strptr (sprintf ("#define atsctrb_%s %s", @(fname, fname)))
) // end of [atsctrb_define]
%}\
\
#atscode_banner_for_C()
#atscode_copyright_LGPL_for_C()

#atscode_separator_for_C()

/*
** Source:
** $PATSHOME/prelude/CATS/CODEGEN/mysql.atxt
** Time of generation: #timestamp()
*/

#atscode_separator_for_C()

/*
#atscode_author("Hongwei Xi")
#atscode_authoremail("hwxi AT cs DOT bu DOT edu")
#atscode_start_time("May, 2012")
*/

#atscode_separator_for_C()

\#ifndef ATSHOME_CONTRIB_MYSQL_MYSQL_CATS
\#define ATSHOME_CONTRIB_MYSQL_MYSQL_CATS

#atscode_separator_for_C()

\#include <mysql.h>

#atscode_separator_for_C()

typedef MYSQL MYSQL_struct ;
typedef MYSQL_RES MYSQLRES_struct ;
typedef MYSQL_ROW MYSQLROW_struct ;
typedef MYSQL_FIELD MYSQLFIELD_struct ;

#atscode_separator_for_C()

\#define atsctrb_mysql_init0() mysql_init(NULL)

#atscode_separator_for_C()

#atsctrb_define("mysql_close")
#atsctrb_define("mysql_real_connect")

#atscode_separator_for_C()

#atsctrb_define("mysql_errno")

\#define atsctrb_mysql_error(x) ((char*)(mysql_error(x)))

#atscode_separator_for_C()

#atsctrb_define("mysql_query")

#atscode_separator_for_C()

#atsctrb_define("mysql_field_count")

#atscode_separator_for_C()

#atsctrb_define("mysql_num_rows")
#atsctrb_define("mysql_num_fields")

#atscode_separator_for_C()

#atsctrb_define("mysql_free_result")
#atsctrb_define("mysql_store_result")

#atscode_separator_for_C()

ATSinline()
ats_ptr_type
atsctrb_mysqlrow_get_at
  (ats_ptr_type row, ats_int_type i) { return ((ats_ptr_type*)row)[i] ; }
// end of [atsctrb_mysqlrow_get_at]

#atscode_separator_for_C()

ATSinline()
ats_ptr_type
atsctrb_mysqlfield_get_name
  (ats_ptr_type fld) { return ((MYSQLFIELD_struct*)fld)->name ; }
// end of [atsctrb_mysqlfield_get_name]

#atscode_separator_for_C()

\#define atsctrb_mysql_info(conn) ((char*)(mysql_info(conn)))

#atscode_separator_for_C()

\#define atsctrb_mysql_get_host_info(conn) ((char*)(mysql_get_host_info(conn)))
#atsctrb_define("mysql_get_proto_info")
\#define atsctrb_mysql_get_client_info() ((char*)(mysql_get_client_info()))
#atsctrb_define("mysql_get_client_version")
\#define atsctrb_mysql_get_server_info(conn) ((char*)(mysql_get_server_info(conn)))
#atsctrb_define("mysql_get_server_version")

#atscode_separator_for_C()

\#endif // ifndef ATSHOME_CONTRIB_MYSQL_MYSQL_CATS

#atscode_separator_for_C()

#atscode_eof_strsub_for_C("\#thisfilename$")\

%{
implement main () = fprint_filsub (stdout_ref, "mysql_atxt.txt")
%}\
