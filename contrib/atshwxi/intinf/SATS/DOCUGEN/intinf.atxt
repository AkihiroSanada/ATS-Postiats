(* ****** ****** *)

%{
implement srcfilename_get () = "../intinf.sats"
%}

(* ****** ****** *)

%{
val () = patscode_count_reset()
val () = patscode_prefix_set("TRYIT/atshwxi_intinf")
%}

(* ****** ****** *)

#decltitle("\
CONTRIB/atshwxi/intinf\
")

(* ****** ****** *)

#declpreamble('\

#para('\

The package is for supporting integers of unlimited precision.

')#comment("para")

')#comment("declpreamble")

(* ****** ****** *)

#declname("intinf")
#declsynop2('\
#para('\
#pats2xhtmls('\
stadef intinf = intinf_vtype
')\
')')
#declnamesynop("intinf_vtype")

(* ****** ****** *)

#declnamesynop("intinf")
#declnamesynop("Intinf")

(* ****** ****** *)

#declnamesynop("intinf_make_int")
#declnamesynop("intinf_make_uint")
#declnamesynop("intinf_make_lint")
#declnamesynop("intinf_make_ulint")

(* ****** ****** *)

#declnamesynop("intinf_free")

(* ****** ****** *)

#declnamesynop("print_intinf")
#declnamesynop("prerr_intinf")
#declnamesynop("fprint_intinf")
#declnamesynop("fprint_intinf_base")

(* ****** ****** *)

#declnamesynop("abs_intinf0")
#declnamesynop("abs_intinf1")

#declnamesynop("neg_intinf0")
#declnamesynop("neg_intinf1")

(* ****** ****** *)

#declnamesynop("succ_intinf0")
#declnamesynop("succ_intinf1")
#declnamesynop("pred_intinf0")
#declnamesynop("pred_intinf1")

(* ****** ****** *)

#declnamesynop("add_intinf0_int")
#declnamesynop("add_intinf1_int")
#declnamesynop("add_intinf0_intinf1")
#declnamesynop("add_intinf1_intinf0")
#declnamesynop("add_intinf1_intinf1")

(* ****** ****** *)

#declnamesynop("sub_intinf0_int")
#declnamesynop("sub_intinf1_int")
#declnamesynop("sub_intinf0_intinf1")
#declnamesynop("sub_intinf1_intinf0")
#declnamesynop("sub_intinf1_intinf1")

(* ****** ****** *)

#declnamesynop("mul_intinf0_int")
#declnamesynop("mul_intinf1_int")
#declnamesynop("mul_intinf0_intinf1")
#declnamesynop("mul_intinf1_intinf0")
#declnamesynop("mul_intinf1_intinf1")

(* ****** ****** *)

(* end of [intinf.atxt] *)
